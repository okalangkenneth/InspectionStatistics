// <auto-generated />
using System;
using InspectionStatistics.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InspectionStatistics.Persistence.Migrations
{
    [DbContext(typeof(InspectionStatisticsDbContext))]
    [Migration("20210824103113_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InspectionStatistics.Domain.Entities.Department", b =>
                {
                    b.Property<Guid>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InspectionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = new Guid("b0788d2f-8003-43c1-92a4-edc76a7c5dde"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionType = "Quantity Control"
                        },
                        new
                        {
                            DepartmentId = new Guid("6313179f-7837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionType = "Quality Control"
                        },
                        new
                        {
                            DepartmentId = new Guid("bf3f3002-7e53-441e-8b76-f6280be284aa"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionType = "Cleanliness Control"
                        },
                        new
                        {
                            DepartmentId = new Guid("fe98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionType = "Pest Control"
                        });
                });

            modelBuilder.Entity("InspectionStatistics.Domain.Entities.Inspection", b =>
                {
                    b.Property<Guid>("InspectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspectionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("InspectionId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Inspections");

                    b.HasData(
                        new
                        {
                            InspectionId = new Guid("ee272f8b-6096-4cb6-8625-bb4bb2d89e8b"),
                            Client = "John Egbert",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2022, 2, 24, 12, 31, 12, 948, DateTimeKind.Local).AddTicks(7344),
                            DepartmentId = new Guid("b0788d2f-8003-43c1-92a4-edc76a7c5dde"),
                            Description = "Join John for his farwell tour across 15 continents. John really needs no introduction since he has already mesmerized the world with his banjo.",
                            InspectionType = "Quantity Control",
                            Price = 65
                        },
                        new
                        {
                            InspectionId = new Guid("3448d5a4-0f72-4dd7-bf15-c14a46b26c00"),
                            Client = "Michael Johnson",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2022, 5, 24, 12, 31, 12, 954, DateTimeKind.Local).AddTicks(7247),
                            DepartmentId = new Guid("b0788d2f-8003-43c1-92a4-edc76a7c5dde"),
                            Description = "Michael Johnson doesn't need an introduction. His 25 concert across the globe last year were seen by thousands. Can we add you to the list?",
                            InspectionType = "Quantity Control",
                            Price = 85
                        },
                        new
                        {
                            InspectionId = new Guid("b419a7ca-3321-4f38-be8e-4d7b6a529319"),
                            Client = "The Mike'",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2021, 12, 24, 12, 31, 12, 954, DateTimeKind.Local).AddTicks(7999),
                            DepartmentId = new Guid("b0788d2f-8003-43c1-92a4-edc76a7c5dde"),
                            Description = "DJs from all over the world will compete in this epic battle for eternal fame.",
                            InspectionType = "Quantity Control",
                            Price = 85
                        },
                        new
                        {
                            InspectionId = new Guid("62787623-4c52-43fe-b0c9-b7044fb5929b"),
                            Client = "Manuel Santinonisi",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2021, 12, 24, 12, 31, 12, 954, DateTimeKind.Local).AddTicks(8096),
                            DepartmentId = new Guid("6313179f-7837-473a-a4d5-a5571b43e6a6"),
                            Description = "Get on the hype of Spanish Guitar concerts with Manuel.",
                            InspectionType = "Quality Control",
                            Price = 25
                        },
                        new
                        {
                            InspectionId = new Guid("1babd057-e980-4cb3-9cd2-7fdd9e525668"),
                            Client = "Many",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2022, 6, 24, 12, 31, 12, 954, DateTimeKind.Local).AddTicks(8168),
                            DepartmentId = new Guid("fe98f549-e790-4e9f-aa16-18c2292a2ee9"),
                            Description = "The best tech conference in the world",
                            InspectionType = "Techorama 2021",
                            Price = 400
                        },
                        new
                        {
                            InspectionId = new Guid("adc42c09-08c1-4d2c-9f96-2d15bb1af299"),
                            Client = "Nick Sailor",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2022, 4, 24, 12, 31, 12, 954, DateTimeKind.Local).AddTicks(8259),
                            DepartmentId = new Guid("bf3f3002-7e53-441e-8b76-f6280be284aa"),
                            Description = "The critics are over the moon and so will you after you've watched this sing and dance extravaganza written by Nick Sailor, the man from 'My dad and sister'.",
                            InspectionType = "Cleanliness Control",
                            Price = 135
                        });
                });

            modelBuilder.Entity("InspectionStatistics.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OrderPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OrderPlaced")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderTotal")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7e94bc5b-71a5-4c8c-bc3b-71bb7976237e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderPaid = true,
                            OrderPlaced = new DateTime(2021, 8, 24, 12, 31, 12, 955, DateTimeKind.Local).AddTicks(2539),
                            OrderTotal = 400,
                            UserId = new Guid("a441eb40-9636-4ee6-be49-a66c5ec1330b")
                        },
                        new
                        {
                            Id = new Guid("86d3a045-b42d-4854-8150-d6a374948b6e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderPaid = true,
                            OrderPlaced = new DateTime(2021, 8, 24, 12, 31, 12, 955, DateTimeKind.Local).AddTicks(4268),
                            OrderTotal = 135,
                            UserId = new Guid("ac3cfaf5-34fd-4e4d-bc04-ad1083ddc340")
                        },
                        new
                        {
                            Id = new Guid("771cca4b-066c-4ac7-b3df-4d12837fe7e0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderPaid = true,
                            OrderPlaced = new DateTime(2021, 8, 24, 12, 31, 12, 955, DateTimeKind.Local).AddTicks(4437),
                            OrderTotal = 85,
                            UserId = new Guid("d97a15fc-0d32-41c6-9ddf-62f0735c4c1c")
                        },
                        new
                        {
                            Id = new Guid("3dcb3ea0-80b1-4781-b5c0-4d85c41e55a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderPaid = true,
                            OrderPlaced = new DateTime(2021, 8, 24, 12, 31, 12, 955, DateTimeKind.Local).AddTicks(4516),
                            OrderTotal = 245,
                            UserId = new Guid("4ad901be-f447-46dd-bcf7-dbe401afa203")
                        },
                        new
                        {
                            Id = new Guid("e6a2679c-79a3-4ef1-a478-6f4c91b405b6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderPaid = true,
                            OrderPlaced = new DateTime(2021, 8, 24, 12, 31, 12, 955, DateTimeKind.Local).AddTicks(4581),
                            OrderTotal = 142,
                            UserId = new Guid("7aeb2c01-fe8e-4b84-a5ba-330bdf950f5c")
                        },
                        new
                        {
                            Id = new Guid("f5a6a3a0-4227-4973-abb5-a63fbe725923"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderPaid = true,
                            OrderPlaced = new DateTime(2021, 8, 24, 12, 31, 12, 955, DateTimeKind.Local).AddTicks(4668),
                            OrderTotal = 40,
                            UserId = new Guid("f5a6a3a0-4227-4973-abb5-a63fbe725923")
                        },
                        new
                        {
                            Id = new Guid("ba0eb0ef-b69b-46fd-b8e2-41b4178ae7cb"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderPaid = true,
                            OrderPlaced = new DateTime(2021, 8, 24, 12, 31, 12, 955, DateTimeKind.Local).AddTicks(4736),
                            OrderTotal = 116,
                            UserId = new Guid("7aeb2c01-fe8e-4b84-a5ba-330bdf950f5c")
                        });
                });

            modelBuilder.Entity("InspectionStatistics.Domain.Entities.Inspection", b =>
                {
                    b.HasOne("InspectionStatistics.Domain.Entities.Department", "Department")
                        .WithMany("Inspections")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("InspectionStatistics.Domain.Entities.Department", b =>
                {
                    b.Navigation("Inspections");
                });
#pragma warning restore 612, 618
        }
    }
}
